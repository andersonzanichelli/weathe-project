{"version":3,"sources":["middlewares/stateSchema.js","middlewares/stateValidator.js","middlewares/async.js","actions/types.js","reducers/index.js","reducers/cities.js","reducers/weather.js","components/Chart.js","components/Weather.js","actions/index.js","components/CityBox.js","components/CityList.js","components/App.js","index.js","Root.js"],"names":["stateSchema","definitions","$schema","$id","type","title","required","properties","cities","items","name","default","examples","pattern","country","stateValidator","_ref","dispatch","getState","next","action","tv4","validate","console","warn","middlewares_async","payload","then","response","newAction","Object","objectSpread","SAVE_CITY","FETCH_CITIES","FETCH_WEATHER","combineReducers","state","arguments","length","undefined","city","data","concat","toConsumableArray","_embedded","map","id","weather","log","Chart","props","react_default","a","createElement","build","height","width","color","_","round","sum","units","Weather","cityData","temperatures","list","main","temp","parseInt","pressures","pressure","humidities","humidity","key","v","className","this","renderWeather","Component","connect","SERVER_URL","saveCity","axios","post","fetchCities","get","fetchWeather","ROOT_URL","url","CityBox","handleChangeCity","event","_this","setState","target","value","handleChangeCountry","handleSubmit","preventDefault","onSubmit","placeholder","onChange","actions","CityList","weatherCity","clicked","document","activeElement","getAttribute","split","renderCities","bindActionCreators","App","components_CityBox","components_CityList","components_Weather","ReactDOM","render","children","_ref$initialState","initialState","store","createStore","reducers","applyMiddleware","async","es","react_router_dom","react_router","path","component","querySelector"],"mappings":"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","file":"static/js/main.805acfa4.chunk.js","sourcesContent":["export default {\n  \"definitions\": {},\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$id\": \"http://example.com/root.json\",\n  \"type\": \"object\",\n  \"title\": \"The Root Schema\",\n  \"required\": [\n    \"cities\"\n  ],\n  \"properties\": {\n    \"cities\": {\n      \"$id\": \"#/properties/cities\",\n      \"type\": \"array\",\n      \"title\": \"The Cities Schema\",\n      \"items\": {\n        \"$id\": \"#/properties/cities/items\",\n        \"type\": \"object\",\n        \"title\": \"The Items Schema\",\n        \"required\": [\n          \"name\",\n          \"country\"\n        ],\n        \"properties\": {\n          \"name\": {\n            \"$id\": \"#/properties/cities/items/properties/name\",\n            \"type\": \"string\",\n            \"title\": \"The Name Schema\",\n            \"default\": \"\",\n            \"examples\": [\n              \"MaringÃ¡\"\n            ],\n            \"pattern\": \"^(.*)$\"\n          },\n          \"country\": {\n            \"$id\": \"#/properties/cities/items/properties/country\",\n            \"type\": \"string\",\n            \"title\": \"The Country Schema\",\n            \"default\": \"\",\n            \"examples\": [\n              \"br\"\n            ],\n            \"pattern\": \"^(.*){2}$\"\n          }\n        }\n      }\n    }\n  }\n}\n","import tv4 from 'tv4';\n\nimport stateSchema from './stateSchema';\n\nexport default ( { dispatch, getState }) => (next) => (action) => {\n  next(action);\n\n  if(!tv4.validate(getState(), stateSchema)) {\n    console.warn('Invalid state schema!');\n  }\n};\n","export default ( { dispatch } ) => next => action => {\n\n  if(!action.payload || !action.payload.then) {\n    return next(action);\n  }\n\n  action.payload.then(response => {\n    const newAction = { ...action, payload: response };\n    dispatch(newAction);\n  });\n};\n","export const SAVE_CITY = \"save_city\";\nexport const FETCH_CITIES = \"fetch_cities\";\nexport const FETCH_WEATHER = 'fetch_weather';\n","import { combineReducers } from 'redux';\n\nimport cityReducer from './cities';\nimport weatherReducer from './weather';\n\nexport default combineReducers({\n  cities: cityReducer,\n  weather: weatherReducer\n});\n","import { SAVE_CITY, FETCH_CITIES } from '../actions/types';\n\nexport default function(state = [], action) {\n\n  switch (action.type) {\n    case SAVE_CITY:\n    const city = action.payload.data\n    return [ ...state, city ];\n\n    case FETCH_CITIES:\n      const cities = action.payload.data._embedded.data.map(city => { return { id: city.id, name: city.name, country: city.country } })\n      return [ ...state, ...cities ];\n\n    default:\n      return state;\n  }\n}\n","import { FETCH_WEATHER } from '../actions/types';\n\nexport default function(state = [], action) {\n\n  switch (action.type) {\n\n    case FETCH_WEATHER:\n      console.log(action.payload.data)\n      return [ action.payload.data, ...state ];\n\n    default:\n      return state;\n  }\n}\n","import _ from 'lodash';\nimport React from 'react';\nimport { Sparklines, SparklinesLine, SparklinesReferenceLine } from 'react-sparklines';\n\nfunction average(data) {\n  return _.round(_.sum(data)/data.length);\n}\n\nexport default (props) => {\n  return (\n    <div>\n      <Sparklines height={120} width={180} data={props.data}>\n        <SparklinesLine color={props.color} />\n        <SparklinesReferenceLine type=\"mean\" />\n      </Sparklines>\n      <div>{average(props.data)} {props.units}</div>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport Chart from './Chart';\n\nclass Weather extends Component {\n\n  renderWeather(cityData) {\n    debugger\n    const name = cityData.city.name;\n    const temperatures = _.map(cityData.list.map(weather => weather.main.temp), (temp) => parseInt(temp - 273, 10));\n    const pressures = cityData.list.map(weather => weather.main.pressure);\n    const humidities = cityData.list.map(weather => weather.main.humidity);\n\n    return (\n      <tr key={name}>\n        <td>{name}</td>\n        <td><Chart data={temperatures} v color=\"orange\" units=\"Â°C\" /></td>\n        <td><Chart data={pressures} color=\"green\" units=\"hPa\" /></td>\n        <td><Chart data={humidities} color=\"blue\" units=\"%\" /></td>\n      </tr>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <h4>City Weather</h4>\n        <table className=\"table table-hover\">\n          <thead>\n            <tr>\n              <th>City</th>\n              <th>Temperature</th>\n              <th>Pressure</th>\n              <th>Humidity</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.weather.map(this.renderWeather)}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ weather }) {\n  return { weather };\n}\n\nexport default connect(mapStateToProps)(Weather);\n","import axios from 'axios';\n\nimport { SAVE_CITY, FETCH_CITIES, FETCH_WEATHER } from './types';\n\nconst SERVER_URL = 'http://localhost:8080/weather-api/city';\n\nexport function saveCity(city) {\n  const response = axios.post(SERVER_URL, city);\n\n  return {\n    type: SAVE_CITY,\n    payload: response\n  };\n}\n\nexport function fetchCities() {\n  const response = axios.get(SERVER_URL);\n  return {\n    type: FETCH_CITIES,\n    payload: response\n  }\n}\n\nexport function fetchWeather(city) {\n  const API_KEY = '4a354d9ffeaaddd5b41ad1d434477d81';\n  const ROOT_URL = `http://api.openweathermap.org/data/2.5/forecast?appid=${API_KEY}`;\n\n  const url = `${ROOT_URL}&q=${city.name},${city.country}`;\n  const response = axios.get(url);\n\n  return {\n    type: FETCH_WEATHER,\n    payload: response\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../actions';\n\nclass CityBox extends Component {\n\n  state = { name: '', country: '' };\n\n  handleChangeCity = event => {\n    this.setState({ name: event.target.value });\n  }\n\n  handleChangeCountry = event => {\n    this.setState({ country: event.target.value });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    this.props.saveCity({ name: this.state.name, country: this.state.country });\n\n    this.setState({ name: '', country: ''});\n  }\n\n  render() {\n    return (\n      <form className=\"form-inline\" onSubmit={ this.handleSubmit }>\n        <h4>Add a city</h4>\n        <div className=\"form-group mb-2\">\n          <label>Name</label>\n          <input className=\"name form-control\" id=\"cityName\" placeholder=\"Enter the city name\" onChange={ this.handleChangeCity } value={ this.state.name } />\n        </div>\n        <div className=\"form-group mb-2\">\n          <label>Country</label>\n          <input className=\"country form-control\" id=\"cityCountry\" placeholder=\"Enter the country (ex: br)\" onChange={ this.handleChangeCountry } value={ this.state.country } />\n        </div>\n        <button className=\"saveCity btn btn-primary mb-2\">Add</button>\n      </form>\n    )\n  }\n}\n\nexport default connect( null, actions ) (CityBox);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport * as actions from '../actions';\n\nclass CityList extends Component {\n\n  componentDidMount() {\n    this.props.fetchCities();\n  }\n\n  weatherCity = event => {\n    event.preventDefault();\n    const clicked = document.activeElement.getAttribute(\"id\");\n    const name = clicked.split('_')[0];\n    const country = clicked.split('_')[1]\n    this.props.fetchWeather({ name, country });\n  }\n\n  renderCities() {\n    return this.props.cities.map( city => {\n      return <li className=\"list-group-item\" key={ city.name }>\n              <button className=\"btn btn-secondary\" id={ city.name + \"_\" + city.country } type=\"submit\">{ city.name },{ city.country }</button>\n             </li>;\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"CityList\">\n        <h4>City list</h4>\n        <form onSubmit={ this.weatherCity }>\n          <ul className=\"list-group\">\n            { this.renderCities() }\n          </ul>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { cities: state.cities };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(actions, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (CityList);\n","import React, { Component } from 'react';\n\nimport Weather from './Weather';\nimport CityBox from './CityBox';\nimport CityList from './CityList';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        <CityBox />\n        <CityList />\n        <Weather />\n      </div>\n    );\n  }\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport Root from './Root';\nimport App from './components/App';\n\nReactDOM.render(\n  <Root>\n    <BrowserRouter>\n      <Route path=\"/\" component={ App } />\n    </BrowserRouter>\n  </Root>\n  , document.querySelector('#root'));\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\n\nimport stateValidator from './middlewares/stateValidator';\nimport async from './middlewares/async';\nimport reducers from './reducers';\n\nexport default ({ children, initialState = {} }) => {\n  const store = createStore(\n    reducers,\n    initialState,\n    applyMiddleware(async, stateValidator)\n  );\n\n  return (\n    <Provider store={ store }>\n      { children }\n    </Provider>\n  );\n};\n"],"sourceRoot":""}